{"ast":null,"code":"var _jsxFileName = \"/Users/shubbu/coding_stuff/WEB3/ReactJS/netflix-clone/netflix-clone/src/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Row(_ref) {\n  _s();\n  let {\n    title,\n    fetchUrl\n  } = _ref;\n  const [movies, setMovies] = useState([]); //\n\n  useEffect(() => {\n    // if [],run once when the row loads and dont run it again\n\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    //if [movies], it will run everytime movies variable is changed!!\n\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"+jZiGaK1IrFkDFSplSYv9W7La4s=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Row","_ref","_s","title","fetchUrl","movies","setMovies","fetchData","request","get","data","results","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shubbu/coding_stuff/WEB3/ReactJS/netflix-clone/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from './axios'; \n\nfunction Row({title , fetchUrl}) {\n\n  const [movies,setMovies] = useState([]);//\n\n  useEffect(() => {\n     \n    // if [],run once when the row loads and dont run it again\n\n    async function fetchData(){\n       const request = await axios.get(fetchUrl);\n       setMovies(request.data.results);\n       return request;\n    }\n    //if [movies], it will run everytime movies variable is changed!!\n\n    fetchData();\n  },[fetchUrl]);\n\n  console.log(movies);\n  return (\n    <div>\n      <h2> {title} </h2>\n\n\n\n      {/* container -> posters */}\n    </div>\n  )\n}\n\nexport default Row\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAAC,IAAA,EAAqB;EAAAC,EAAA;EAAA,IAApB;IAACC,KAAK;IAAGC;EAAQ,CAAC,GAAAH,IAAA;EAE7B,MAAM,CAACI,MAAM,EAACC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC;;EAExCD,SAAS,CAAC,MAAM;IAEd;;IAEA,eAAeY,SAASA,CAAA,EAAE;MACvB,MAAMC,OAAO,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACL,QAAQ,CAAC;MACzCE,SAAS,CAACE,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IACjB;IACA;;IAEAD,SAAS,CAAC,CAAC;EACb,CAAC,EAAC,CAACH,QAAQ,CAAC,CAAC;EAEbQ,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;EACnB,oBACEN,OAAA;IAAAe,QAAA,eACEf,OAAA;MAAAe,QAAA,GAAI,GAAC,EAACX,KAAK,EAAC,GAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKf,CAAC;AAEV;AAAChB,EAAA,CA5BQF,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA8BZ,eAAeA,GAAG;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}