{"ast":null,"code":"var _jsxFileName = \"/Users/shubbu/coding_stuff/WEB3/ReactJS/netflix-clone/netflix-clone/src/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://\";\nfunction Row(_ref) {\n  _s();\n  let {\n    title,\n    fetchUrl\n  } = _ref;\n  const [movies, setMovies] = useState([]); //movies array is set to empty in the starting\n\n  useEffect(() => {\n    // if [],run once when the row loads and dont run it again\n\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      //results fetched from the axios.get with fetchUrl are set into the setMovies array\n      setMovies(request.data.results);\n      return request;\n    }\n    //if [variable], it will run everytime variable is changed!!\n\n    fetchData();\n    //fetchUrl is passed below in[] because it is a parameter outside of useEffect and will help us change our setMovies array everytime.\n  }, [fetchUrl]);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.poster_path,\n        alt: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"+jZiGaK1IrFkDFSplSYv9W7La4s=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","base_url","Row","_ref","_s","title","fetchUrl","movies","setMovies","fetchData","request","get","data","results","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","src","poster_path","alt","name","_c","$RefreshReg$"],"sources":["/Users/shubbu/coding_stuff/WEB3/ReactJS/netflix-clone/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from './axios'; \n\n\nconst base_url = \"https://\";\n\nfunction Row({title , fetchUrl}) {\n\n  const [movies,setMovies] = useState([]);//movies array is set to empty in the starting\n\n  useEffect(() => {\n     \n    // if [],run once when the row loads and dont run it again\n\n    async function fetchData(){\n       const request = await axios.get(fetchUrl);\n       //results fetched from the axios.get with fetchUrl are set into the setMovies array\n       setMovies(request.data.results);\n       return request;\n    }\n    //if [variable], it will run everytime variable is changed!!\n\n    fetchData();\n    //fetchUrl is passed below in[] because it is a parameter outside of useEffect and will help us change our setMovies array everytime.\n  },[fetchUrl]);\n\n  console.log(movies);\n  return (\n    <div className='row'>\n      <h2> {title} </h2>\n\n       <div className=\"row__posters\">\n\n      {/* container ->  several row posters */}\n\n      {movies.map(movie =>(\n        <img src={movie.poster_path} alt={movie.name} />\n      ))}\n\n       </div>\n\n    </div>\n  )\n}\n\nexport default Row\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5B,MAAMC,QAAQ,GAAG,UAAU;AAE3B,SAASC,GAAGA,CAAAC,IAAA,EAAqB;EAAAC,EAAA;EAAA,IAApB;IAACC,KAAK;IAAGC;EAAQ,CAAC,GAAAH,IAAA;EAE7B,MAAM,CAACI,MAAM,EAACC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC;;EAExCD,SAAS,CAAC,MAAM;IAEd;;IAEA,eAAea,SAASA,CAAA,EAAE;MACvB,MAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACL,QAAQ,CAAC;MACzC;MACAE,SAAS,CAACE,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IACjB;IACA;;IAEAD,SAAS,CAAC,CAAC;IACX;EACF,CAAC,EAAC,CAACH,QAAQ,CAAC,CAAC;EAEbQ,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;EACnB,oBACEP,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAAiB,QAAA,GAAI,GAAC,EAACZ,KAAK,EAAC,GAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjBrB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAI7BV,MAAM,CAACe,GAAG,CAACC,KAAK,iBACfvB,OAAA;QAAKwB,GAAG,EAAED,KAAK,CAACE,WAAY;QAACC,GAAG,EAAEH,KAAK,CAACI;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEV;AAACjB,EAAA,CArCQF,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAuCZ,eAAeA,GAAG;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}