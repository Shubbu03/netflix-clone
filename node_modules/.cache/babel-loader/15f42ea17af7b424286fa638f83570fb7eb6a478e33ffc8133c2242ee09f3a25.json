{"ast":null,"code":"var _jsxFileName = \"/Users/shubbu/coding_stuff/WEB3/ReactJS/netflix-clone/netflix-clone/src/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Row(_ref) {\n  _s();\n  let {\n    title\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n\n    // if [],run once wh\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"+jZiGaK1IrFkDFSplSYv9W7La4s=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Row","_ref","_s","title","movies","setMovies","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shubbu/coding_stuff/WEB3/ReactJS/netflix-clone/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nfunction Row({title}) {\n\n  const [movies,setMovies] = useState([]);\n\n  useEffect(() => {\n     \n    // if [],run once wh\n  },[]);\n  return (\n    <div>\n      <h2> {title} </h2>\n\n\n\n      {/* container -> posters */}\n    </div>\n  )\n}\n\nexport default Row\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAAC,IAAA,EAAU;EAAAC,EAAA;EAAA,IAAT;IAACC;EAAK,CAAC,GAAAF,IAAA;EAElB,MAAM,CAACG,MAAM,EAACC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEvCD,SAAS,CAAC,MAAM;;IAEd;EAAA,CACD,EAAC,EAAE,CAAC;EACL,oBACEG,OAAA;IAAAO,QAAA,eACEP,OAAA;MAAAO,QAAA,GAAI,GAAC,EAACH,KAAK,EAAC,GAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKf,CAAC;AAEV;AAACR,EAAA,CAjBQF,GAAG;AAAAW,EAAA,GAAHX,GAAG;AAmBZ,eAAeA,GAAG;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}