{"ast":null,"code":"var _jsxFileName = \"/Users/shubbu/coding_stuff/WEB3/ReactJS/netflix-clone/netflix-clone/src/Banner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nimport './Banner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Banner() {\n  _s();\n  const [movie, setMovie] = useState([]); //movies array is set to empty in the starting\n\n  useEffect(() => {\n    async function fetchData() {\n      // this function is the same as Row.js one , here we are creating a axios get request to get a random movie from our predefined API paths.\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]); //the line inside data.results is used to generate a random number from 20 of the netflix originals and display that one on our banner\n\n      return request;\n    }\n    fetchData(); //the function is called to start it .\n  }, []);\n  function truncate(str, n) {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"banner\",\n    style: {\n      backgroundSize: \"cover\",\n      backgroundImage: `url(\n            \"https://image.tmdb.org/t/p/original/${movie === null || movie === void 0 ? void 0 : movie.backdrop_path}\" \n        )`,\n      backgroundPosition: \"center center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner__contents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"banner__title\",\n      children: (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.original_name)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner__buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"banner__button\",\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"banner__button\",\n        children: \"My List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"banner__description\",\n      children: movie === null || movie === void 0 ? void 0 : movie.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Banner, \"jmRb9xsBKsoKCGHCjtfP3JDQESc=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useState","useEffect","axios","requests","jsxDEV","_jsxDEV","Banner","_s","movie","setMovie","fetchData","request","get","fetchNetflixOriginals","data","results","Math","floor","random","length","truncate","str","n","substr","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","children","fileName","_jsxFileName","lineNumber","columnNumber","title","name","original_name","overview","_c","$RefreshReg$"],"sources":["/Users/shubbu/coding_stuff/WEB3/ReactJS/netflix-clone/netflix-clone/src/Banner.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nimport './Banner.css'\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]); //movies array is set to empty in the starting\n\n  useEffect(() => {\n    async function fetchData() { // this function is the same as Row.js one , here we are creating a axios get request to get a random movie from our predefined API paths.\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );//the line inside data.results is used to generate a random number from 20 of the netflix originals and display that one on our banner\n\n      return request; \n    }\n\n    fetchData(); //the function is called to start it .\n  }, []);\n\n  \n  function truncate(str,n){\n    return str?.length> n ? str.substr(0,n-1) + \"...\" : str; \n  }\n  return (\n    <header className=\"banner\"\n     style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\n            \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\" \n        )`,\n        backgroundPosition: \"center center\",\n     }}\n    > \n        <div className=\"banner__contents\">\n\n\n        </div>\n     \n      {/* Title */}\n\n      <h1 className=\"banner__title\"> \n        {movie?.title || movie?.name || movie?.original_name}\n      </h1>\n\n      {/* div 2buttons */}\n\n      <div className=\"banner__buttons\">\n\n        <button className=\"banner__button\">Play</button>\n        \n        <button className=\"banner__button\">My List</button>\n\n      </div>\n\n      {/* description */}\n\n      <h1 className=\"banner__description\">{movie?.overview}</h1>\n    </header>\n  );\n}\n\nexport default Banner;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}