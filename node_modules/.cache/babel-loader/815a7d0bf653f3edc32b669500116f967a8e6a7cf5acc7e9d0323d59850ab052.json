{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shubbu/coding_stuff/WEB3/ReactJS/netflix-clone/netflix-clone/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/shubbu/coding_stuff/WEB3/ReactJS/netflix-clone/netflix-clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/shubbu/coding_stuff/WEB3/ReactJS/netflix-clone/netflix-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import axios from\"./axios\";import requests from\"./requests\";import'./Banner.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Banner(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movie=_useState2[0],setMovie=_useState2[1];//movies array is set to empty in the starting\nuseEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var request;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(requests.fetchNetflixOriginals);case 2:request=_context.sent;setMovie(request.data.results[Math.floor(Math.random()*request.data.results.length-1)]);//the line inside data.results is used to generate a random number from 20 of the netflix originals and display that one on our banner\nreturn _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();//the function is called to start it .\n},[]);// the truncate function is used to keep the description till 150 words only and remove any words further and put ... in place of it\nfunction truncate(str,n){return(str===null||str===void 0?void 0:str.length)>n?str.substr(0,n-1)+\"...\":str;}return/*#__PURE__*/_jsxs(\"header\",{className:\"banner\",style:{backgroundSize:\"cover\",backgroundImage:\"url(\\n            \\\"https://image.tmdb.org/t/p/original/\".concat(movie===null||movie===void 0?void 0:movie.backdrop_path,\"\\\" \\n        )\"),backgroundPosition:\"center center\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"banner__contents\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"banner__title\",children:(movie===null||movie===void 0?void 0:movie.title)||(movie===null||movie===void 0?void 0:movie.name)||(movie===null||movie===void 0?void 0:movie.original_name)}),/*#__PURE__*/_jsxs(\"div\",{className:\"banner__buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"banner__button\",children:\"Play\"}),/*#__PURE__*/_jsx(\"button\",{className:\"banner__button\",children:\"My List\"})]}),/*#__PURE__*/_jsx(\"h1\",{className:\"banner__description\",children:truncate(movie===null||movie===void 0?void 0:movie.overview,150)}),/*#__PURE__*/_jsx(\"div\",{className:\"banner__fadeBottom\"})]});}export default Banner;","map":{"version":3,"names":["React","useState","useEffect","axios","requests","jsx","_jsx","jsxs","_jsxs","Banner","_useState","_useState2","_slicedToArray","movie","setMovie","fetchData","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","wrap","_callee$","_context","prev","next","get","fetchNetflixOriginals","sent","data","results","Math","floor","random","length","abrupt","stop","truncate","str","n","substr","className","style","backgroundSize","backgroundImage","concat","backdrop_path","backgroundPosition","children","title","name","original_name","overview"],"sources":["/Users/shubbu/coding_stuff/WEB3/ReactJS/netflix-clone/netflix-clone/src/Banner.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nimport './Banner.css'\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]); //movies array is set to empty in the starting\n\n  useEffect(() => {\n    async function fetchData() { // this function is the same as Row.js one , here we are creating a axios get request to get a random movie from our predefined API paths.\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );//the line inside data.results is used to generate a random number from 20 of the netflix originals and display that one on our banner\n\n      return request; \n    }\n\n    fetchData(); //the function is called to start it .\n  }, []);\n\n  // the truncate function is used to keep the description till 150 words only and remove any words further and put ... in place of it\n  function truncate(str,n){\n    return str?.length> n ? str.substr(0,n-1) + \"...\" : str; \n  }\n  return (\n    <header className=\"banner\"\n     style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\n            \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\" \n        )`,\n        backgroundPosition: \"center center\",\n     }}\n    > \n        <div className=\"banner__contents\">\n\n\n        </div>\n     \n      {/* Title */}\n\n      <h1 className=\"banner__title\"> \n        {movie?.title || movie?.name || movie?.original_name}\n      </h1>\n\n      {/* div 2buttons */}\n\n      <div className=\"banner__buttons\">\n\n        <button className=\"banner__button\">Play</button>\n        \n        <button className=\"banner__button\">My List</button>\n\n      </div>\n\n      {/* description */}\n\n      <h1 className=\"banner__description\">{truncate(movie?.overview,150)}</h1>\n\n      <div className=\"banner__fadeBottom\"></div>\n    </header>\n  );\n}\n\nexport default Banner;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}